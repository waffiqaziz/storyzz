name: Flutter CI/CD with Firebase Hosting

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "*.md"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
      - "*.md"
  workflow_dispatch: 

env:
  FLUTTER_VERSION: 3.35.2

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install dependencies
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          flutter gen-l10n

      - name: Create .env file
        run: |
          echo "GEOCODE_API_KEY='${{ secrets.GEOCODE_API_KEY }}'" > assets/.env
      
      - name: Create secrets.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/secrets.properties
      
      - name: Analyze Dart code
        run: flutter analyze --no-fatal-infos
      
      # - name: Run tests
      #   run: flutter test

  testing:
    name: Run Tests
    needs: analyze
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write

    steps:
      - uses: actions/checkout@v4

      
      - name: Set up Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install dependencies
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          flutter gen-l10n

      - name: Create .env file
        run: |
          echo "GEOCODE_API_KEY='${{ secrets.GEOCODE_API_KEY }}'" > assets/.env
      
      - name: Create secrets.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/secrets.properties

      - name: Run Flutter Tests
        run: flutter test --coverage

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@6c1aa0cc9e1c02f9f58f01ac599f1064ccc83470

      - name: Report Code Coverage
        uses: zgosalvez/github-actions-report-lcov@ec80ffb0e31fc6b6c35e18a8ef83403b1a8a84ee
        with:
          coverage-files: coverage/lcov.info
          update-comment: true
          minimum-coverage: 50
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Generate test report .xml
        run: |
          flutter test --coverage --reporter json > test.jsonl
          dart pub global activate --source git https://github.com/waffiqaziz/flutter-junitreport.git
          dart pub global run flutter_junitreport:tojunit --input test.jsonl --output TEST-report.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build_android_free:
    name: Build Android Free Variant
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      - name: Set up Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Flutter version
        run: flutter --version
      
      - name: Install dependencies & generate files
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          flutter gen-l10n
      
      - name: Create .env file
        run: |
          echo "GEOCODE_API_KEY='${{ secrets.GEOCODE_API_KEY }}'" > assets/.env
      
      - name: Create secrets.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/secrets.properties
      
      - name: Build APK (Free)
        run: flutter build apk --flavor free -t lib/main.dart --debug
      
      # - name: Upload Free Debug APK
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-free-debug
      #     path: build/app/outputs/flutter-apk/app-free-debug.apk
      
      - name: Build Free Release APK
        run: flutter build apk --flavor free -t lib/main.dart --release
      
      # - name: Upload Free Release APK
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-free-release
      #     path: build/app/outputs/flutter-apk/app-free-release.apk

  build_android_paid:
    name: Build Android Paid Variant
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      - name: Set up Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Flutter version
        run: flutter --version
      
      - name: Install dependencies & generate files
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          flutter gen-l10n
      
      - name: Create .env file
        run: |
          echo "GEOCODE_API_KEY='${{ secrets.GEOCODE_API_KEY }}'" > assets/.env
      
      - name: Create secrets.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/secrets.properties
      
      - name: Build APK (Paid)
        run: flutter build apk --flavor paid -t lib/main.dart --debug
      
      # - name: Upload Paid Debug APK
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-paid-debug
      #     path: build/app/outputs/flutter-apk/app-paid-debug.apk
      
      - name: Build Paid Release APK
        run: flutter build apk --flavor paid -t lib/main.dart --release
      
      # - name: Upload Paid Release APK
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-paid-release
      #     path: build/app/outputs/flutter-apk/app-paid-release.apk

  build_android_bundle:
    name: Build Android App Bundle
    needs: analyze
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      - name: Set up Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Install dependencies & generate files
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          flutter gen-l10n
      
      - name: Create .env file
        run: |
          echo "GEOCODE_API_KEY='${{ secrets.GEOCODE_API_KEY }}'" > assets/.env
      
      - name: Create secrets.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > android/secrets.properties
      
      - name: Build App Bundle (Free)
        run: flutter build appbundle --flavor free -t lib/main.dart
      
      # - name: Upload Free App Bundle
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-free-bundle
      #     path: build/app/outputs/bundle/freeRelease/app-free-release.aab
      
      - name: Build App Bundle (Paid)
        run: flutter build appbundle --flavor paid -t lib/main.dart
      
      # - name: Upload Paid App Bundle
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-paid-bundle
      #     path: build/app/outputs/bundle/paidRelease/app-paid-release.aab

  build_and_deploy_web:
    name: Build and Deploy Firebase Web
    needs: analyze
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Flutter version
        run: flutter --version
      
      - name: Install dependencies & generate files
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          flutter gen-l10n
      
      - name: Create .env file
        run: |
          echo "GEOCODE_API_KEY='${{ secrets.GEOCODE_API_KEY }}'" > assets/.env
          
      - name: Create environment file
        run: |
          echo "window.ENV = { 
            GOOGLE_MAPS_API_KEY: '${{ secrets.GOOGLE_MAPS_API_KEY }}',
            GEOCODE_API_KEY: '${{ secrets.GEOCODE_API_KEY }}'
          };" > web/env.js
          
      - name: Build Flutter Web
        run: flutter build web --release --dart-define=APP_FLAVOR=paid
        
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STORYZZ_63592 }}
          channelId: live
          projectId: storyzz-63592

  build_and_preview_web:
    name: Build and Preview Firebase Web
    needs: analyze
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@395322a6cded4e9ed503aebd4cc1965625f8e59a
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          
      - name: Flutter version
        run: flutter --version
      
      - name: Install dependencies & generate files
        run: |
          flutter pub get
          dart run build_runner build --delete-conflicting-outputs
          flutter gen-l10n
      
      - name: Create .env file
        run: |
          echo "GEOCODE_API_KEY='${{ secrets.GEOCODE_API_KEY }}'" > assets/.env
          
      - name: Create environment file
        run: |
          echo "window.ENV = { 
            GOOGLE_MAPS_API_KEY: '${{ secrets.GOOGLE_MAPS_API_KEY }}',
            GEOCODE_API_KEY: '${{ secrets.GEOCODE_API_KEY }}'
          };" > web/env.js
          
      - name: Build Flutter Web
        run: flutter build web --release --dart-define=APP_FLAVOR=paid
        
      - name: Deploy to Firebase Hosting Preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_STORYZZ_63592 }}
          projectId: storyzz-63592
